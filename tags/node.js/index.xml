<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Node.js on 岁月留痕</title>
    <link>https://www.hewei.in/tags/node.js/</link>
    <description>Recent content in Node.js on 岁月留痕</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Oct 2020 04:56:33 +0800</lastBuildDate><atom:link href="https://www.hewei.in/tags/node.js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Node.js 包管理</title>
      <link>https://www.hewei.in/posts/2020-10-nodejs-package-management/</link>
      <pubDate>Thu, 08 Oct 2020 04:56:33 +0800</pubDate>
      
      <guid>https://www.hewei.in/posts/2020-10-nodejs-package-management/</guid>
      <description>&lt;h2 id=&#34;包管理器安装&#34;&gt;包管理器安装&lt;/h2&gt;
&lt;p&gt;安装 Node.js 时，会连同 npm 这个默认的包管理器一起安装上。&lt;/p&gt;
&lt;p&gt;但平时使用的话，还是建议用 Yarn，安装这部分没什么好说的，下载安装包然后按照默认设置安装即可。&lt;/p&gt;
&lt;p&gt;注：本文凡是提到 Yarn 的部分，均指 Yarn 1.X 版本。&lt;/p&gt;
&lt;h2 id=&#34;第一时间配置下载源&#34;&gt;第一时间配置下载源&lt;/h2&gt;
&lt;p&gt;用如下命令给 npm 和 Yarn 配置淘宝源，加速 npm 包下载。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# npm 配置淘宝源&lt;/span&gt;
$ npm config &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;registry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;https://registry.npm.taobao.org

&lt;span class=&#34;c1&#34;&gt;# npm 查看源设置是否成功&lt;/span&gt;
$ npm config get registry

&lt;span class=&#34;c1&#34;&gt;# Yarn 配置淘宝源&lt;/span&gt;
$ yarn config &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; registry https://registry.npm.taobao.org

&lt;span class=&#34;c1&#34;&gt;# Yarn 查看源设置是否成功&lt;/span&gt;
$ yarn config get registry
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>用 PM2 管理 Node.js 后端项目</title>
      <link>https://www.hewei.in/posts/2020-10-pm2-tutorial/</link>
      <pubDate>Thu, 08 Oct 2020 04:31:20 +0800</pubDate>
      
      <guid>https://www.hewei.in/posts/2020-10-pm2-tutorial/</guid>
      <description>&lt;p&gt;PM2 不仅可以实现 Node.js 项目的持久化，还能实现代码的自动发布，在本机更改代码并推送到 GitHub 上之后，通过一行命令，就可以让服务端自动下载最新的代码并编译执行，以下是具体流程。&lt;/p&gt;
&lt;h2 id=&#34;注意事项&#34;&gt;注意事项&lt;/h2&gt;
&lt;p&gt;每次升级 PM2 或者 Node.js 版本后，都要按文档 &lt;a href=&#34;https://pm2.keymetrics.io/docs/usage/update-pm2/&#34;&gt;Updating PM2&lt;/a&gt; 给出的标准流程来操作，保证不影响 PM2 所管理的项目。&lt;/p&gt;
&lt;p&gt;另外，如果 Windows 下的 Node.js 程序是用 &lt;a href=&#34;https://stackoverflow.com/a/42770772/2667665&#34;&gt;Windows: Auto start PM2 and node apps&lt;/a&gt; 这里说的方法做的持久化，那么在升级 PM2 之后，Node.js 程序的持久化有可能失效。这样的话，就需要按照这里说的方法，将作为服务启动的 PM2 删除并重新新建才行。&lt;/p&gt;
&lt;h3 id=&#34;升级-pm2&#34;&gt;升级 PM2&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 保存 PM2 项目列表及配置&lt;/span&gt;
pm2 save

&lt;span class=&#34;c1&#34;&gt;# 用 npm 或 yarn 升级全局安装的 PM2&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 更新到新版的 PM2&lt;/span&gt;
pm2 update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;升级-nodejs&#34;&gt;升级 Node.js&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ pm2 unstartup
$ pm2 startup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>API Design in Node.js, v3 课程学习笔记</title>
      <link>https://www.hewei.in/posts/2020-02-frontend-masters-api-design-in-nodejs-v3/</link>
      <pubDate>Tue, 04 Feb 2020 08:27:48 +0800</pubDate>
      
      <guid>https://www.hewei.in/posts/2020-02-frontend-masters-api-design-in-nodejs-v3/</guid>
      <description>&lt;p&gt;之前在研究该如何更好地设计 Node.js API 时，在网上找到了 Frontend Masters 的《API Design in Node.js, v3》这门课，当时大致看了一下 GitHub 上对应的代码，觉得这门课程设计得挺不错，于是买了一个月的 Frontend Masters 会员，把这门课程认真学了一遍，并且把关键部分都做了笔记，具体内容见文章正文。&lt;/p&gt;
&lt;h2 id=&#34;课程地址&#34;&gt;课程地址&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://frontendmasters.com/courses/api-design-nodejs-v3/&#34;&gt;API Design in Node.js, v3&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;环境配置&#34;&gt;环境配置&lt;/h2&gt;
&lt;h3 id=&#34;在-macos-上安装-mongodb&#34;&gt;在 macOS 上安装 MongoDB&lt;/h3&gt;
&lt;p&gt;参考 &lt;a href=&#34;https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x/&#34;&gt;Install MongoDB Community Edition on macOS&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;简而言之，就是通过 Homebrew 安装 MongoDB，并按照官方建议，用 brew 将 MongoDB 以服务的方式运行在后台。&lt;/p&gt;
&lt;h2 id=&#34;注意事项&#34;&gt;注意事项&lt;/h2&gt;
&lt;h3 id=&#34;yarn-及-npm&#34;&gt;Yarn 及 NPM&lt;/h3&gt;
&lt;p&gt;因为课程已经是一年多以前的了，项目中的依赖库版本也没怎么更新，所以如果遇到用 Yarn 或 NPM 安装依赖库会失败的情况，比如 &lt;code&gt;bcrypt&lt;/code&gt; 这个库，那么可以先删除对应的库，然后重新安装，这样会安装最新版，通常都能成功。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
